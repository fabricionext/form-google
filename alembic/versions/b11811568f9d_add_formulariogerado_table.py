"""add FormularioGerado table

Revision ID: b11811568f9d
Revises: b999e01c3884
Create Date: 2025-06-19 11:17:21.271851

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b11811568f9d"
down_revision: Union[str, None] = "b999e01c3884"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("posts")
    op.drop_index(op.f("IDX_session_expire"), table_name="user_sessions")
    op.drop_table("user_sessions")
    op.drop_table("team_members")
    op.drop_table("practice_areas")
    op.drop_table("site_settings")
    op.drop_table("testimonials")
    op.drop_table("site_content")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "site_content",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("content_key", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("content_value", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("site_content_pkey")),
        sa.UniqueConstraint(
            "content_key", name=op.f("site_content_content_key_unique")
        ),
    )
    op.create_table(
        "testimonials",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("case_type", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("text", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "rating",
            sa.INTEGER(),
            server_default=sa.text("5"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("image", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "order",
            sa.INTEGER(),
            server_default=sa.text("0"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "source",
            postgresql.ENUM("manual", "google", name="testimonial_source"),
            server_default=sa.text("'manual'::testimonial_source"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("google_review_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "synced_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "published",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "featured",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("testimonials_pkey")),
    )
    op.create_table(
        "site_settings",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("key", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "value",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("site_settings_pkey")),
        sa.UniqueConstraint("key", name=op.f("site_settings_key_unique")),
    )
    op.create_table(
        "practice_areas",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("title", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("icon", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("features", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "order",
            sa.INTEGER(),
            server_default=sa.text("0"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("full_description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("image", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("services", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("tool", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("tool_label", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("color", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("seo_title", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("seo_description", sa.TEXT(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("practice_areas_pkey")),
    )
    op.create_table(
        "team_members",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("role", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("bio", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "image_url", sa.VARCHAR(length=512), autoincrement=False, nullable=True
        ),
        sa.Column("email", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column("phone", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
        sa.Column("oab", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column(
            "order",
            sa.INTEGER(),
            server_default=sa.text("0"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("team_members_pkey")),
    )
    op.create_table(
        "user_sessions",
        sa.Column("sid", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "sess",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "expire",
            postgresql.TIMESTAMP(precision=6),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("sid", name=op.f("session_pkey")),
    )
    op.create_index(
        op.f("IDX_session_expire"), "user_sessions", ["expire"], unique=False
    )
    op.create_table(
        "posts",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("title", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("slug", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("content", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("image", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "published",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("author", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("posts_pkey")),
        sa.UniqueConstraint("slug", name=op.f("posts_slug_unique")),
    )
    # ### end Alembic commands ###
