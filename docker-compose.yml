# Docker Compose for Form Google - Peticionador ADV
# FASE 6.1 - Configuração corrigida para produção

version: '3.8'

services:
  # Aplicação principal
  app:
    build: .
    container_name: form-google-app
    restart: unless-stopped
    ports:
      - '80:80'
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-formgoogle123}@db:5432/form_google
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - /tmp/form-google-volumes/documents:/home/app/documents
      - /tmp/form-google-volumes/logs:/var/log
      - /tmp/form-google-volumes/uploads:/home/app/static/uploads
    depends_on:
      - db
      - redis
    networks:
      - form-google-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    read_only: false
    tmpfs:
      - /tmp
      - /var/tmp
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: form-google-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=form_google
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-formgoogle123}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /tmp/form-google-volumes/backups:/backups
    ports:
      - '5432:5432'
    networks:
      - form-google-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache e sessões
  redis:
    image: redis:7-alpine
    container_name: form-google-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    networks:
      - form-google-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx Load Balancer (opcional para múltiplas instâncias)
  nginx-lb:
    image: nginx:alpine
    container_name: form-google-nginx-lb
    restart: unless-stopped
    ports:
      - '443:443'
    volumes:
      - ./docker/nginx-lb.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - form-google-network
    profiles:
      - ssl

  # Backup automático
  backup:
    image: postgres:15-alpine
    container_name: form-google-backup
    restart: 'no'
    environment:
      - PGPASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - /tmp/form-google-volumes/backups:/backups
      - ./docker/backup.sh:/backup.sh:ro
    command: /backup.sh
    depends_on:
      - db
    networks:
      - form-google-network
    profiles:
      - backup

  # Monitoring com Prometheus (opcional)
  prometheus:
    image: prom/prometheus:latest
    container_name: form-google-prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - form-google-network
    profiles:
      - monitoring

  # Grafana para dashboards (opcional)
  grafana:
    image: grafana/grafana:latest
    container_name: form-google-grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
    depends_on:
      - prometheus
    networks:
      - form-google-network
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  form-google-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
